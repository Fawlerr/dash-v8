#!/usr/bin/env node

const fs = require('fs-extra');
const path = require('path');

console.log('üöÄ Script de Atualiza√ß√£o VPS - Removendo Sistema de Login');
console.log('=======================================================\n');

async function updateVPS() {
    try {
        console.log('üì¶ Preparando arquivos para atualiza√ß√£o...');
        
        // 1. Verificar se estamos no diret√≥rio correto
        if (!await fs.pathExists('package.json')) {
            console.error('‚ùå package.json n√£o encontrado. Execute este script na raiz do projeto.');
            process.exit(1);
        }

        // 2. Atualizar arquivo .env para remover JWT_SECRET (n√£o √© mais necess√°rio)
        const envFile = path.join(__dirname, '.env');
        if (await fs.pathExists(envFile)) {
            console.log('üìù Atualizando arquivo .env...');
            let envContent = await fs.readFile(envFile, 'utf8');
            
            // Remover JWT_SECRET se existir
            envContent = envContent.replace(/JWT_SECRET=.*\n/g, '');
            
            await fs.writeFile(envFile, envContent);
            console.log('‚úÖ Arquivo .env atualizado (JWT_SECRET removido)');
        }

        // 3. Criar arquivo de instru√ß√µes para a VPS
        const updateInstructions = `# üìã Instru√ß√µes para Atualiza√ß√£o na VPS

## üîÑ Atualiza√ß√£o do Sistema (Removendo Login)

### 1. Fazer Backup da Vers√£o Atual
\`\`\`bash
# Criar backup da vers√£o atual
cd /home/app.up-send.com/public_html/whatsapp-dashboard
cp -r . ../whatsapp-dashboard-backup-$(date +%Y%m%d_%H%M%S)
\`\`\`

### 2. Parar a Aplica√ß√£o
\`\`\`bash
pm2 stop whatsapp-dashboard
\`\`\`

### 3. Fazer Upload dos Novos Arquivos
Fa√ßa upload dos seguintes arquivos modificados:
- app.js
- routes/api.js
- public/js/perfil.js
- Todas as p√°ginas HTML em public/ (remover refer√™ncias ao auth-check.js)

### 4. Remover Arquivo de Autentica√ß√£o
\`\`\`bash
# Remover arquivo auth-check.js (n√£o √© mais necess√°rio)
rm -f public/js/auth-check.js
\`\`\`

### 5. Atualizar Depend√™ncias (se necess√°rio)
\`\`\`bash
npm install --production
\`\`\`

### 6. Reiniciar a Aplica√ß√£o
\`\`\`bash
pm2 start ecosystem.config.js
pm2 save
\`\`\`

### 7. Verificar se Est√° Funcionando
\`\`\`bash
# Verificar status
pm2 status

# Verificar logs
pm2 logs whatsapp-dashboard --lines 20

# Testar API
curl http://localhost:3000/api/check-status
\`\`\`

## ‚úÖ O que foi alterado:

1. **Sistema de Login Removido**: N√£o √© mais necess√°rio fazer login
2. **Todas as p√°ginas acess√≠veis**: Dashboard, inst√¢ncias, templates, etc.
3. **API simplificada**: Removidas rotas de autentica√ß√£o
4. **Arquivo auth-check.js deletado**: N√£o √© mais necess√°rio

## üåê Acesso:
- **Dashboard**: http://app.up-send.com (acesso direto)
- **API**: http://app.up-send.com/api
- **Todas as p√°ginas**: Acesso direto sem login

## üîß Comandos √öteis:
- Ver status: \`pm2 status\`
- Ver logs: \`pm2 logs whatsapp-dashboard\`
- Reiniciar: \`pm2 restart whatsapp-dashboard\`
- Parar: \`pm2 stop whatsapp-dashboard\`

## ‚ö†Ô∏è Importante:
- O sistema agora √© acess√≠vel sem autentica√ß√£o
- Todos os dados e funcionalidades permanecem iguais
- Apenas o sistema de login foi removido
`;

        await fs.writeFile('VPS-UPDATE-INSTRUCTIONS.md', updateInstructions);
        console.log('‚úÖ Arquivo de instru√ß√µes criado: VPS-UPDATE-INSTRUCTIONS.md');

        // 4. Criar lista de arquivos modificados
        const modifiedFiles = [
            'app.js',
            'routes/api.js',
            'public/js/perfil.js',
            'public/dashboard.html',
            'public/instances.html',
            'public/code.html',
            'public/campanhas.html',
            'public/mensagens-automaticas.html',
            'public/templates.html',
            'public/leads-extractor.html',
            'public/logs.html',
            'public/perfil.html',
            'public/configuracoes.html',
            'public/administracao.html'
        ];

        const filesList = `# üìÅ Arquivos Modificados para Upload

## Arquivos que precisam ser atualizados na VPS:

${modifiedFiles.map(file => `- ${file}`).join('\n')}

## Arquivo que deve ser REMOVIDO:
- public/js/auth-check.js

## Arquivos que N√ÉO precisam ser alterados:
- package.json
- package-lock.json
- node_modules/
- data/
- uploads/
- logs/
- .env (pode manter o atual)
- ecosystem.config.js
`;

        await fs.writeFile('FILES-TO-UPDATE.md', filesList);
        console.log('‚úÖ Lista de arquivos criada: FILES-TO-UPDATE.md');

        console.log('\nüéâ Prepara√ß√£o para atualiza√ß√£o conclu√≠da!');
        console.log('\nüìã Pr√≥ximos passos:');
        console.log('1. Fa√ßa backup da vers√£o atual na VPS');
        console.log('2. Pare a aplica√ß√£o: pm2 stop whatsapp-dashboard');
        console.log('3. Fa√ßa upload dos arquivos listados em FILES-TO-UPDATE.md');
        console.log('4. Remova o arquivo public/js/auth-check.js na VPS');
        console.log('5. Reinicie a aplica√ß√£o: pm2 start ecosystem.config.js');
        console.log('\nüìö Consulte as instru√ß√µes detalhadas em VPS-UPDATE-INSTRUCTIONS.md');

    } catch (error) {
        console.error('‚ùå Erro durante a prepara√ß√£o:', error.message);
        process.exit(1);
    }
}

updateVPS();
